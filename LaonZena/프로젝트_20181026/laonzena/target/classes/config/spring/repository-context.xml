<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:p="http://www.springframework.org/schema/p" 
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" 
       xsi:schemaLocation="http://www.springframework.org/schema/aop 
                           http://www.springframework.org/schema/aop/spring-aop.xsd
       					   http://www.springframework.org/schema/tx 
                           http://www.springframework.org/schema/tx/spring-tx.xsd
       					   http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">                           
		
	<!-- properties 파일 로딩 -->
	<context:property-placeholder location="classpath:config/mybatis/db.properties"/>
	
	<!-- 데이터베이스 커넥션 관리 : commons-dbcp2 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" 
		destroy-method="close"
		p:driverClassName="${jdbc.oracle.driver}"
		p:url="${jdbc.oracle.url}"
		p:username="${jdbc.oracle.username}"
		p:password="${jdbc.oracle.password}"
	/>
	
	<!-- spring 에서 mybatis를 연결해서 사용하는 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="kr.co.laonzena.repository.domain"></property>
		<property name="mapperLocations" value="classpath:config/sqlmap/*.xml"></property>
	</bean>

	<!-- spring 에게 Mapper 인터페이스의 위치를 알려주고 인터페이스에 해당하는 구현 객체 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.co.laonzena.repository.mapper"></property>
	</bean>
	
	<!-- 트랜젝션 처리 파트 시작 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="Exception" />
			<!-- <tx:method name="메서드명" /> -->
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="tranPct" expression="execution( public * kr.co.laonzena..service.*Impl.*(..) )" />
<!-- 		<aop:pointcut id="tranPct" expression="execution( 접근제한자 + 리턴타입 + 패키지명.클래스명.메서드명(매개변수)" /> -->
		
		<!--
			[공통기능 클래스와 메서드를 알 수 없는 경우에는 aspect를 사용할 수없다.]
			<aop:aspect>
				<aop:around method="공통기능 메서드" pointcut-ref="a" />
			</aop:aspect>
		-->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="tranPct"/>

	</aop:config>
</beans>
















